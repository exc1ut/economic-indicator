[{"C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\index.tsx":"1","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\reportWebVitals.ts":"2","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\App.tsx":"3","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\Main.tsx":"4","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\context\\MapContext.tsx":"5","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\context\\UserContext.tsx":"6","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\components\\index.ts":"7","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\components\\SelectionChart.tsx":"8","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\components\\Register.tsx":"9","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\components\\Login.tsx":"10","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\components\\LineChart.tsx":"11","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\components\\SideBar.tsx":"12","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\components\\Map.tsx":"13"},{"size":517,"mtime":1638642185071,"results":"14","hashOfConfig":"15"},{"size":440,"mtime":1638642185073,"results":"16","hashOfConfig":"15"},{"size":398,"mtime":1638642185059,"results":"17","hashOfConfig":"15"},{"size":2581,"mtime":1638642185059,"results":"18","hashOfConfig":"15"},{"size":490,"mtime":1638642185065,"results":"19","hashOfConfig":"15"},{"size":446,"mtime":1638642185065,"results":"20","hashOfConfig":"15"},{"size":172,"mtime":1638642185064,"results":"21","hashOfConfig":"15"},{"size":2684,"mtime":1638642185063,"results":"22","hashOfConfig":"15"},{"size":2355,"mtime":1638642185062,"results":"23","hashOfConfig":"15"},{"size":2273,"mtime":1638642185061,"results":"24","hashOfConfig":"15"},{"size":1148,"mtime":1638642185060,"results":"25","hashOfConfig":"15"},{"size":1788,"mtime":1638642185064,"results":"26","hashOfConfig":"15"},{"size":1589,"mtime":1638642185062,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p7opum",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\index.tsx",[],"C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\reportWebVitals.ts",[],"C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\App.tsx",[],"C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\Main.tsx",["60","61"],"import {\r\n  AppBar,\r\n  Button,\r\n  Card,\r\n  createMuiTheme,\r\n  Grid,\r\n  ThemeProvider,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  Map,\r\n  SideBar,\r\n  SelectionChart,\r\n  Register,\r\n  Login,\r\n  MyChart,\r\n} from \"./components\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { useMap } from \"./context/MapContext\";\r\nimport { Switch, Route, Link, useHistory } from \"react-router-dom\";\r\nimport { useUserData } from \"./context/UserContext\";\r\nimport styles from \"./styles/styles.module.scss\";\r\n\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n});\r\n\r\nfunction Main() {\r\n  const history = useHistory();\r\n\r\n  const { selectedCountry } = useMap();\r\n  const { data } = useUserData();\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <CssBaseline />\r\n      <AppBar color=\"default\" position=\"static\">\r\n        <Toolbar>\r\n          <Typography style={{ flexGrow: 1 }} variant=\"h6\">\r\n            Economic indicator\r\n          </Typography>\r\n          {data == null ? (\r\n            <>\r\n              <Button color=\"inherit\" onClick={() => history.push(\"/login\")}>\r\n                Login\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => history.push(\"/register\")}>\r\n                Register\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <Typography variant=\"h6\">{data.name}</Typography>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Switch>\r\n        <Route exact path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route exact path=\"/register\">\r\n          <Register />\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          {selectedCountry === null ? (\r\n            <Grid container spacing={1}>\r\n              (\r\n              <Grid item xs={12} spacing={1}>\r\n                <Map />\r\n              </Grid>\r\n              )\r\n            </Grid>\r\n          ) : (\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={8} spacing={1}>\r\n                <Map />\r\n              </Grid>\r\n              <Grid item xs={4} spacing={1}>\r\n                <SideBar />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={8} className={styles.styledCard}>\r\n              <SelectionChart />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <MyChart />\r\n            </Grid>\r\n          </Grid>\r\n        </Route>\r\n      </Switch>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\context\\MapContext.tsx",[],"C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\context\\UserContext.tsx",[],"C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\components\\index.ts",[],"C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\components\\SelectionChart.tsx",["62","63"],"import { Box, Button, ButtonGroup, Card, Typography } from \"@material-ui/core\";\r\nimport styles from \"../styles/styles.module.scss\";\r\nimport {\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  LineChart,\r\n  YAxis,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\nimport info from \"../data/Ist'emol narxlari indeksi dinamikasi.json\";\r\nimport { useEffect, useState } from \"react\";\r\nimport json from \"../data/newGraph.json\";\r\nimport { useMap } from \"../context/MapContext\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nexport function SelectionChart() {\r\n  const [picked, setPicked] = useState(\"Elektroenergiya iste`moli\");\r\n  const [data, setData] = useState<any>(null);\r\n  const { selectedCountry } = useMap();\r\n  useEffect(() => {\r\n    const city = json.find((i) => i.city === selectedCountry);\r\n    setData(city);\r\n  }, [selectedCountry]);\r\n\r\n  if (data === null) return null;\r\n  return (\r\n    <AnimatePresence>\r\n      <Card className={styles.styledCard}>\r\n        <>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            O'zbekiston ist'emol narxlari indeksi dinamikasi\r\n          </Typography>\r\n          <ButtonGroup\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            aria-label=\"contained primary button group\"\r\n          >\r\n            <Button onClick={() => setPicked(\"Elektroenergiya iste`moli\")}>\r\n              Elektroenergiya iste`moli\r\n            </Button>\r\n            <Button onClick={() => setPicked(\"qishloq xo'jaligi\")}>\r\n              iste`mol mollari ishlab chiqarish\r\n            </Button>\r\n            <Button\r\n              onClick={() => setPicked(\"iste`mol mollari ishlab chiqarish\")}\r\n            >\r\n              Qurilish ishlari\r\n            </Button>\r\n            <Button onClick={() => setPicked(\"Qurilish ishlari\")}>\r\n              qishloq xo'jaligi\r\n            </Button>\r\n            <Button onClick={() => setPicked(\"Transport\")}>Transport</Button>\r\n          </ButtonGroup>\r\n\r\n          <Box style={{ display: \"flex\", marginTop: 40 }}>\r\n            <ResponsiveContainer width=\"100%\" height={400}>\r\n              <LineChart\r\n                data={data[picked]}\r\n                margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\r\n              >\r\n                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n                <Tooltip />\r\n                <Legend />\r\n                <XAxis dataKey=\"year\" />\r\n                <YAxis dataKey=\"value\" />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </Box>\r\n        </>\r\n      </Card>\r\n    </AnimatePresence>\r\n  );\r\n}\r\n","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\components\\Register.tsx",["64","65","66"],"import { Button, Card, TextField, Typography } from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { motion } from \"framer-motion\";\r\nimport { FormEvent, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useUserData } from \"../context/UserContext\";\r\nimport styles from \"../styles/styles.module.scss\";\r\n\r\nexport const Register = () => {\r\n  const [name, setName] = useState<any>(\"\");\r\n  const [email, setEmail] = useState<any>(\"\");\r\n  const [password, setPassword] = useState<any>(\"\");\r\n  const [error, setError] = useState<any>(null);\r\n\r\n  const history = useHistory();\r\n\r\n  const { data, setData } = useUserData();\r\n\r\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n\r\n    try {\r\n      const data = await Axios.post(\"http://192.168.1.15:5000/user\", {\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n      history.push(\"/login\");\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  const variants = {\r\n    init: { y: 70 },\r\n    end: { y: 0 },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      variants={variants}\r\n      initial=\"init\"\r\n      animate=\"end\"\r\n      style={{ display: \"flex\", justifyContent: \"center\" }}\r\n    >\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <Card className={`${styles.styledCard} ${styles.formCard}`}>\r\n          {error && \"There are errors\"}\r\n          <Typography variant=\"h2\">Register</Typography>\r\n          <TextField\r\n            required\r\n            value={name}\r\n            label=\"Name\"\r\n            onChange={(text) => setName(text.target.value)}\r\n          />\r\n          <TextField\r\n            required\r\n            value={email}\r\n            label=\"Email\"\r\n            onChange={(text) => setEmail(text.target.value)}\r\n          />\r\n          <TextField\r\n            required\r\n            value={password}\r\n            label=\"password\"\r\n            onChange={(text) => setPassword(text.target.value)}\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n            Sign in\r\n          </Button>\r\n          <Button\r\n            onClick={() => history.push(\"/\")}\r\n            variant=\"text\"\r\n            color=\"default\"\r\n          >\r\n            Go to main page\r\n          </Button>\r\n        </Card>\r\n      </form>\r\n    </motion.div>\r\n  );\r\n};\r\n","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\components\\Login.tsx",["67"],"import { Button, Card, TextField, Typography } from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { FormEvent, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useUserData } from \"../context/UserContext\";\r\nimport styles from \"../styles/styles.module.scss\";\r\n\r\nexport const Login = () => {\r\n  const [email, setEmail] = useState<any>(\"\");\r\n  const [password, setPassword] = useState<any>(\"\");\r\n  const [error, setError] = useState<any>(null);\r\n\r\n  const history = useHistory();\r\n\r\n  const { data: contextData, setData } = useUserData();\r\n\r\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const { data } = await Axios.post(\"http://192.168.1.15:5000/user/login\", {\r\n        email,\r\n        password,\r\n      });\r\n      setData(data);\r\n\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  const variants = {\r\n    init: { y: 100 },\r\n    end: { y: 0 },\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        variants={variants}\r\n        initial=\"init\"\r\n        animate=\"end\"\r\n        style={{ display: \"flex\", justifyContent: \"center\" }}\r\n      >\r\n        <form onSubmit={(e) => handleSubmit(e)}>\r\n          <Card className={`${styles.styledCard} ${styles.formCard}`}>\r\n            {error && \"There are errors\"}\r\n            <Typography variant=\"h2\">Login</Typography>\r\n            <TextField\r\n              required\r\n              value={email}\r\n              label=\"Email\"\r\n              onChange={(text) => setEmail(text.target.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              value={password}\r\n              label=\"password\"\r\n              onChange={(text) => setPassword(text.target.value)}\r\n            />\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Sign in\r\n            </Button>\r\n            <Button\r\n              onClick={() => history.push(\"/\")}\r\n              variant=\"text\"\r\n              color=\"default\"\r\n            >\r\n              Go to main page\r\n            </Button>\r\n          </Card>\r\n        </form>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\components\\LineChart.tsx",[],"C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\components\\SideBar.tsx",["68"],"import {\r\n  Card,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useMap } from \"../context/MapContext\";\r\nimport styles from \"../styles/styles.module.scss\";\r\nimport info from \"../data/info.json\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport function SideBar() {\r\n  const { selectedCountry, setSelectedCountry } = useMap();\r\n  const [data, setData] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    if (selectedCountry !== null) {\r\n      const data = info.find((i) => i.name === selectedCountry);\r\n      if (data?.info) {\r\n        console.log(data);\r\n        setData(data);\r\n      }\r\n    }\r\n  }, [selectedCountry]);\r\n\r\n  if (data === null) return null;\r\n\r\n  const variants = {\r\n    init: { opacity: 0 },\r\n    end: { opacity: 1 },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      variants={variants}\r\n      transition={{ duration: 1 }}\r\n      initial=\"init\"\r\n      animate=\"end\"\r\n    >\r\n      <Card style={{ height: 1000 }} className={styles.styledCard}>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {data.name}\r\n        </Typography>\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableBody>\r\n              {Object.entries(data.info).map((row: any, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    <TableCell>{row[0]}</TableCell>\r\n                    <TableCell>{row[1]}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","C:\\Users\\umid1\\Desktop\\economic-indicator\\src\\components\\Map.tsx",["69","70","71","72","73","74"],"import uzbekistanMap from \"../data/uzbekistan.json\";\r\nimport { VectorMap } from \"@south-paw/react-vector-maps\";\r\nimport { Box, Card, Typography } from \"@material-ui/core\";\r\nimport styles from \"../styles/styles.module.scss\";\r\nimport { useState } from \"react\";\r\nimport { useMap } from \"../context/MapContext\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport function Map() {\r\n  const { selectedCountry, setSelectedCountry } = useMap();\r\n\r\n  const [hovered, setHovered] = useState<any>(\"None\");\r\n  const [focused, setFocused] = useState<any>(\"None\");\r\n  const [clicked, setClicked] = useState<any>(\"None\");\r\n\r\n  const layerProps = {\r\n    onMouseEnter: ({ target }: any) => setHovered(target.attributes.name.value),\r\n    onMouseLeave: ({ target }: any) => setHovered(\"None\"),\r\n    onFocus: ({ target }: any) => setFocused(target.attributes.name.value),\r\n    onBlur: ({ target }: any) => setFocused(\"None\"),\r\n    onClick: ({ target }: any) =>\r\n      setSelectedCountry(target.attributes.name.value),\r\n  };\r\n\r\n  const variants = {\r\n    init: { opacity: 0 },\r\n    end: { opacity: 1 },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      variants={variants}\r\n      transition={{ duration: 1 }}\r\n      initial=\"init\"\r\n      animate=\"end\"\r\n    >\r\n      <Card style={{ height: 1000 }} className={styles.styledCard}>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          O'zbekiston kartasi\r\n        </Typography>\r\n        <div className={styles.container}>\r\n          <VectorMap {...uzbekistanMap} layerProps={layerProps} />\r\n        </div>\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n}\r\n",{"ruleId":"75","severity":1,"message":"76","line":4,"column":3,"nodeType":"77","messageId":"78","endLine":4,"endColumn":7},{"ruleId":"75","severity":1,"message":"79","line":23,"column":25,"nodeType":"77","messageId":"78","endLine":23,"endColumn":29},{"ruleId":"75","severity":1,"message":"80","line":13,"column":8,"nodeType":"77","messageId":"78","endLine":13,"endColumn":12},{"ruleId":"75","severity":1,"message":"81","line":17,"column":27,"nodeType":"77","messageId":"78","endLine":17,"endColumn":33},{"ruleId":"75","severity":1,"message":"82","line":17,"column":11,"nodeType":"77","messageId":"78","endLine":17,"endColumn":15},{"ruleId":"75","severity":1,"message":"83","line":17,"column":17,"nodeType":"77","messageId":"78","endLine":17,"endColumn":24},{"ruleId":"75","severity":1,"message":"82","line":24,"column":13,"nodeType":"77","messageId":"78","endLine":24,"endColumn":17},{"ruleId":"75","severity":1,"message":"84","line":16,"column":17,"nodeType":"77","messageId":"78","endLine":16,"endColumn":28},{"ruleId":"75","severity":1,"message":"85","line":17,"column":28,"nodeType":"77","messageId":"78","endLine":17,"endColumn":46},{"ruleId":"75","severity":1,"message":"86","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":13},{"ruleId":"75","severity":1,"message":"87","line":10,"column":11,"nodeType":"77","messageId":"78","endLine":10,"endColumn":26},{"ruleId":"75","severity":1,"message":"88","line":12,"column":10,"nodeType":"77","messageId":"78","endLine":12,"endColumn":17},{"ruleId":"75","severity":1,"message":"89","line":13,"column":10,"nodeType":"77","messageId":"78","endLine":13,"endColumn":17},{"ruleId":"75","severity":1,"message":"90","line":14,"column":10,"nodeType":"77","messageId":"78","endLine":14,"endColumn":17},{"ruleId":"75","severity":1,"message":"91","line":14,"column":19,"nodeType":"77","messageId":"78","endLine":14,"endColumn":29},"@typescript-eslint/no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'info' is defined but never used.","'motion' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'contextData' is assigned a value but never used.","'setSelectedCountry' is assigned a value but never used.","'Box' is defined but never used.","'selectedCountry' is assigned a value but never used.","'hovered' is assigned a value but never used.","'focused' is assigned a value but never used.","'clicked' is assigned a value but never used.","'setClicked' is assigned a value but never used."]